<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-3.0.xsd
         http://www.springframework.org/schema/mvc
         http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
         http://www.springframework.org/schema/aop
         http://www.springframework.org/schema/aop/spring-aop.xsd">

    <mvc:annotation-driven/>
    <mvc:default-servlet-handler/>
    <aop:aspectj-autoproxy proxy-target-class="true" expose-proxy="true"/>

    <context:component-scan base-package="com.whl.blog.web.controller" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>

    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
            </list>
        </property>
    </bean>

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="order" value="1"/>
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".html"/>
        <property name="viewClass">
            <value>org.springframework.web.servlet.view.InternalResourceView</value>
        </property>
    </bean>

    <!-- 异常处理 -->
    <bean id="exceptionResolver" class="com.whl.blog.common.handler.BlogExceptionHandler"/>

    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/statics/**"/>
            <mvc:exclude-mapping path="/view/statics/**"/>
            <bean class="com.whl.blog.common.interceptor.TraceInterceptor"/>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/statics/**"/>
            <mvc:exclude-mapping path="/view/statics/**"/>
            <bean class="com.whl.blog.common.interceptor.CORSInterceptor"/>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/login/in"/>
            <mvc:exclude-mapping path="/login/getPin"/>
            <mvc:exclude-mapping path="/statics/**"/>
            <mvc:exclude-mapping path="/view/statics/**"/>
            <bean class="com.jiupai.platform.merchant.common.interceptor.CookieAuthInterceptor"/>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/login/in"/>
            <mvc:exclude-mapping path="/login/getPin"/>
            <mvc:exclude-mapping path="/statics/**"/>
            <mvc:exclude-mapping path="/view/statics/**"/>
            <bean class="com.jiupai.platform.merchant.common.interceptor.RuleInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize">
            <value>10485760</value>
        </property>
        <property name="maxInMemorySize">
            <value>4096</value>
        </property>
    </bean>

    <bean id="oprLogAop" class="com.whl.blog.web.aop.OpLogAop"/>

    <aop:config>
        <aop:aspect ref="oprLogAop">
            <aop:pointcut id="pointOprLog" expression="execution(* com.whl.blog.web.controller.*.*(..))"/>
            <aop:after-returning method="afterReturning" returning="ret" pointcut-ref="pointOprLog"/>
        </aop:aspect>
    </aop:config>


    <mvc:resources mapping="/view/statics/**" location="/statics/"/>
    <mvc:resources mapping="/view/safe/statics/**" location="/statics/"/>

</beans>
